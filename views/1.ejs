<!doctype html>
<html lang="en">
  <head>
    <link rel="stylesheet" href="/css/default.css">
    <link rel="stylesheet" href="/css/lib.css">
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/highlight_default.css">
  </head>
  <body>
    <%- include('partials/navbar') %>
    <div style="max-width: 70rem; margin: auto;">
      <h1>Application Node.js web minimale</h1>
      <p>Cet article décrit comment créer un serveur assez minimaliste en ayant toutefois beaucoup de contrôle et de possibilités à l'aide de Node.js et d'Express.js.</p>

      <p>Comme technologies, j'utilise:</p>
      <ul>
        <li>Node.js: Programme qui nous permet d'exécuter du code javascript à l'extérieur d'un navigateur internet</li>
        <li>Express.js: Librairie pour créer un serveur</li>
        <li>Ejs (optionel): Librairie faire varier le contenu des vues</li>
      </ul>

      <h2>Prérequis</h2>

      <p>Cet article considère que le lecteur sait utiliser un terminal de commandes et qu'il a déjà une base en javascript et en HTML.</p>

      <h3>Installer node.js</h3>

      <p>Suivre les instructions d'installation sur le site internet de l'organisation: <a href="https://nodejs.org/en/download/package-manager/">https://nodejs.org/en/download/package-manager/</a>. Pour valider l'installation utiliser la commande suivante qui devrait afficher la version de node.</p>

      <pre class="cmd">$ node --version
v16.14.0</pre>
      
      <p>Installer les dépendances:</p>
      
      <pre class="cmd">$ npm install ejs express</pre>
      
      <h2>Préparation</h2>

      <p>Créer un nouveau dossier.</p>
      
      <pre class="cmd">$ mkdir nouveau_projet
$ cd nouveau_projet
</pre>

      <h3>Package.json</h3>

      <p>Node utilise un fichier qui s'appelle package.json pour ses configurations. Vous pouvez le créer avec la commande:</p>
      
      <pre class="cmd">$ npm init</pre>

      <p>Répondez aux questions, mais ça n'a pas tant d'importance. Ensuite, il faut ouvrir le fichier et rajouter la ligne:</p>
      <pre><code>  "type": "module",</code></pre>

      <p>Cela permet d'importer des modules selon la nouvelle syntaxe (ESM).</p>
      
      <pre><code>import package from "package" // ESM
const package = require("package") // Vielle syntaxe (CommonJS)</code></pre>

      <p>Votre fichier devrait ressembler à quelque chose du genre:</p>

      <div class="file-name">package.json</div>
      <pre><code class="language-json"><%- encodeHtml(files.f2) %></code></pre>

      <p>Créez un nouveau fichier «server.js» et pour valider que tout fonctionne ajouter la ligne suivante:</p>

      <div class="file-name">server.js</div>
      <pre><code>console.log('Hello world!')</code></pre>
      
      <p>Pour exécuter, lancer la commande suivante dans le terminal:</p>
      <pre class="cmd">$ npm run start
Hello world!</pre>

      <h2>Code</h2>

      <p>Plusieurs fichiers sont utilisé pour programmer le serveur. Je n'irai pas dans les détails pour expliquer chaque fichier. Des commentaires sont écrit à l'intérieur pour expliquer comment cela fonctionne.</p>

      <ul>
        <li>src/router.js: Contient les routes qui relie l'URL à une vue.</li>
        <li>views/index.html: Un exemple de vue.</li>
        <li>server.js: Le fichier principal du programme. Tout est exécuter à partir de ce fichier.</li>
        <li>.gitignore (optionel): Si vous utilisez git, n'oubliez pas d'ignorer certains fichiers.</li>
      </ul>

      <div class="file-name">src/router.js</div>
      <pre><code><%- encodeHtml(files.f4) %></code></pre>
      <br>
      <div class="file-name">views/index.html</div>
      <pre><code><%- encodeHtml(files.f1) %></code></pre>
      <br>
      <div class="file-name">server.js</div>
      <pre><code><%- encodeHtml(files.f3) %></code></pre>

      <h3>.gitignore (optionel)</h3>
      <p>Si vous utilisez <b>git</b> pour gérer votre code source, voici un fichier de départ qui donne la liste des fichiers à ignorer par le programme. Personnalisez selon vos besoins.</p>
      <div class="file-name">.gitignore</div>
      <pre><code class="language-plaintext"><%- encodeHtml(files.f5) %></code></pre>
    </div>
  </body>
</html>

<script src="/build/main.js" type="text/javascript"/></script>
